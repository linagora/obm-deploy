---
######################## CREATE NEEDED DIRECTORIES #####################################
- name: Create CA and certificate directories if needed
  file: path={{ item }} state=directory recurse=true mode=0755
  with_items:
      - "{{ ca_file | dirname }}"
      - "{{ cert_file | dirname }}"
      - "{{ default_ca_file | dirname }}"
      - "{{ default_cert_file | dirname }}"
  tags: obm-cert
########################################################################################

############################### CHECK CONFIGURATION INTEGRITY ###########################
- name: Check if certificate is cutomized if CA is customized
  debug: 
      msg: "You can't customize your CA if you don't customize your certificate"
  when: ca_file != default_ca_file and cert_file == default_cert_file
  failed_when: True
  tags: obm-cert

- name: Check if CA is cutomized if certificate is customized
  debug: 
      msg: "You can't customize your certificate if you don't customize your CA"
  when: cert_file != default_cert_file and ca_file == default_ca_file
  failed_when: True
  tags: obm-cert

- name: Check if certificate is cutomized if key is customized
  debug:
      msg: "You can't customize your key if you don't customize your certificate"
  when: key_file != default_cert_file and cert_file == default_cert_file
  failed_when: True
  tags: obm-cert
#########################################################################################

################################## CHECK LOCAL FILES ##################################
- name: Check for local CA certificate
  stat: path=certificates/{{ entry_point }}/{{ ca_file | basename }}
  delegate_to: localhost
  register: check_cafile
  tags: obm-cert

- name: Check for local certificate
  stat: path=certificates/{{ entry_point }}/{{ cert_file | basename }}
  delegate_to: localhost
  register: check_certfile
  tags: obm-cert

- name: Check for local key
  stat: path=certificates/{{ entry_point }}/{{ key_file | basename }}
  delegate_to: localhost
  register: check_keyfile
  tags: obm-cert

#########################################################################################

################################## MANAGE CA CERTIFICATE ################################
- name: Fetch OBM CA File
  fetch: >
      src={{ default_ca_file }}
      dest=certificates/{{ ca_host }}/
      validate_md5=yes
      flat=yes
  delegate_to: "{{ ca_host }}"
  when: ca_file == default_ca_file or check_cafile.stat.isfile == False
  tags: obm-cert

- name: Create the CA directory
  file: >
      path="{{ default_ca_file | dirname }}"
      state=directory
  tags: obm-cert

- name: Push generic CA file to remote host
  copy: >
      src=certificates/{{ ca_host }}/{{ default_ca_file | basename }}
      dest={{ default_ca_file }}
  when: ca_file == default_ca_file or check_cafile.stat.isfile == False
  tags: obm-cert

- name: Push custom CA file to remote host
  copy: >
      src=certificates/{{ ca_host }}/{{ ca_file | basename }}
      dest={{ ca_file }}
  when: ca_file != default_ca_file and check_cafile.stat.isfile == True
  tags: obm-cert

- name: Push generic CA file to OBM-autoconf
  copy: >
      src=certificates/{{ ca_host }}/{{ default_ca_file | basename }}
      dest={{ autoconf_client_dir }}/modules/certs/{{ default_ca_file | basename }}
  notify:
      - Add a generic CA cert to OBM-Autoconf configuration
      - Build OBM-Autoconf client
  when: ( ca_file == default_ca_file or check_cafile.stat.isfile == False ) and inventory_hostname in groups['autoconfservers']
  tags: obm-cert

- name: Push custom CA file to OBM-autoconf
  copy: >
      src=certificates/{{ ca_host }}/{{ ca_file | basename }}
      dest={{ autoconf_client_dir }}/modules/certs/{{ ca_file | basename }}
  notify:
      - Add a generic CA cert to OBM-Autoconf configuration
      - Build OBM-Autoconf client
  when: ( ca_file != default_ca_file and check_cafile.stat.isfile == True ) and inventory_hostname in groups['autoconfservers']
  tags: obm-cert
#########################################################################################

############################ MANAGE GENERIC CERTIFICATE FILE ############################
- name: Create OBM generic certificate
  command: >
      creates={{ default_cert_file | dirname }}/{{ entry_point }}_signed.pem
      /usr/share/obm-ca/createcert.sh "{{ entry_point }}"
  delegate_to: "{{ ca_host }}"
  when: cert_file == default_cert_file or check_certfile.stat.isfile == False
  tags: obm-cert

- name: Fetch OBM generic certificate
  fetch: >
      src={{ default_cert_file | dirname }}/{{ entry_point }}_signed.pem
      dest=certificates/{{ entry_point }}/
      validate_md5=yes
      flat=yes
  delegate_to: "{{ ca_host }}"
  when: cert_file == default_cert_file or check_certfile.stat.isfile == False
  tags: obm-cert

- name: Push OBM generic certificate to remote host
  copy: >
      src=certificates/{{ entry_point }}/{{ entry_point }}_signed.pem
      dest={{ default_cert_file | dirname }}/{{ entry_point }}_signed.pem
  when: cert_file == default_cert_file or check_certfile.stat.isfile == False
  tags: obm-cert

- name: Set OBM symlink to generic certificate
  file: >
      src="{{ default_cert_file | dirname }}/{{ entry_point }}_signed.pem"
      dest="{{ default_cert_file }}"
      state=link
  when: cert_file == default_cert_file or check_certfile.stat.isfile == False
  tags: obm-cert
##########################################################################################

############################# MANAGE CUSTOM CERTIFICATE FILE #############################
- name: Push custom certificate to remote host
  copy: >
      src=certificates/{{ entry_point }}/{{ cert_file | basename }}
      dest={{ cert_file }}
  when: cert_file != default_cert_file and check_certfile.stat.isfile == True
  tags: obm-cert

- name: Push custom key file to remote host
  copy: >
      src=certificates/{{ entry_point }}/{{ key_file | basename }}
      dest={{ key_file }}
  when: key_file != default_cert_file and check_keyfile.stat.isfile == True
  tags: obm-cert

- name: Set OBM symlink to custom certificate
  file: >
      src="{{ cert_file }}"
      dest="{{ default_cert_file }}"
      state=link
  when: cert_file != default_cert_file and check_certfile.stat.isfile == True
  tags: obm-cert
##########################################################################################
