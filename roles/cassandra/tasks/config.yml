---
- name: Change Cassandra authenticator
  lineinfile: >
              dest={{ cassandra_conf_dir }}/cassandra.yaml
              regexp='^authenticator:.*'
              line='authenticator: PasswordAuthenticator'
  notify:
      - Restart Cassandra server
  tags: cassandra

- name: Set Cassandra seed
  lineinfile: >
              dest={{ cassandra_conf_dir }}/cassandra.yaml
              regexp='seeds:.*'
              line='          - seeds: {{ cassandra_seeds }}'
  notify:
      - Restart Cassandra server
  tags: cassandra

- name: Set Cassandra rpc_address
  lineinfile: >
              dest={{ cassandra_conf_dir }}/cassandra.yaml
              regexp='^rpc_address:.*'
              line='rpc_address: {{ hostvars[inventory_hostname] | get_ip(lan_net) }}'
  notify:
      - Restart Cassandra server
  tags: cassandra

- name: Set Cassandra listen_address
  lineinfile: >
              dest={{ cassandra_conf_dir }}/cassandra.yaml
              regexp='^listen_address:.*'
              line='listen_address: {{ hostvars[inventory_hostname] | get_ip(lan_net) }}'
  notify:
      - Restart Cassandra server
  tags: cassandra

- name: Deploy Cassandra initialization script
  template: src=init.cql dest=/etc/cassandra/init.cql
  when: inventory_hostname == groups['cassandraservers'][0]
  notify:
      - Run Cassandra initialization script
  tags: cassandra

- name: Patch cassandra-env script
  lineinfile: >
              dest={{ cassandra_conf_dir }}/cassandra-env.sh
              regexp='^if \[ \"\$JVM_VERSION\" \\\< \"1\.8\" \]'
              line='if [ "$JVM_VERSION" \< "1.8" ] && [ "$JVM_PATCH_VERSION" -lt 25 ] ; then'
  tags: cassandra

- name: Start Cassandra service
  service: name=cassandra enabled=true state=started
  tags: cassandra
